{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/cargo": {
            "post": {
                "description": "Create a new cargo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Create a new cargo",
                "parameters": [
                    {
                        "description": "Cargo data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Cargo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Cargo ID",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/cargo/user/{id}": {
            "get": {
                "description": "Get all cargos by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get all cargos by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Cargo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/cargo/{id}": {
            "get": {
                "description": "Get a cargo by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get a cargo by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Cargo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a cargo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Update a cargo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cargo data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Cargo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cargo updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a cargo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Delete a cargo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cargo deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/cargos": {
            "get": {
                "description": "Get all cargos with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get all cargos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of cargos per page",
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.successResponseAllCargos"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/delivery": {
            "get": {
                "description": "Get all routes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery"
                ],
                "summary": "Get all routes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.DeliveryRoute"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new delivery route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery"
                ],
                "summary": "Create a new delivery route",
                "parameters": [
                    {
                        "description": "Delivery route",
                        "name": "delivery_route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.DeliveryRoute"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Delivery route created",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/delivery-schedule": {
            "get": {
                "description": "Get all delivery schedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeliverySchedule"
                ],
                "summary": "Get all delivery schedules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.DeliverySchedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new delivery schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeliverySchedule"
                ],
                "summary": "Create a new delivery schedule",
                "parameters": [
                    {
                        "description": "DeliverySchedule object",
                        "name": "delivery-schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.DeliverySchedule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/delivery-schedule/{id}": {
            "get": {
                "description": "Get an existing delivery schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeliverySchedule"
                ],
                "summary": "Get an existing delivery schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DeliverySchedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.DeliverySchedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing delivery schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeliverySchedule"
                ],
                "summary": "Delete an existing delivery schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DeliverySchedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing delivery schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeliverySchedule"
                ],
                "summary": "Update an existing delivery schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DeliverySchedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DeliverySchedule object",
                        "name": "delivery-schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.DeliverySchedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/delivery/{id}": {
            "get": {
                "description": "Get delivery route by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery"
                ],
                "summary": "Get delivery route by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delivery route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.DeliveryRoute"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update delivery route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery"
                ],
                "summary": "Update delivery route",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delivery route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Delivery route",
                        "name": "delivery_route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.DeliveryRoute"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery route updated",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete delivery route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery"
                ],
                "summary": "Delete delivery route",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delivery route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery route deleted",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/geo/address": {
            "post": {
                "description": "Retrieves geolocation data for a given address using the DaData API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Geolocation"
                ],
                "summary": "Get geolocation data for an address",
                "parameters": [
                    {
                        "description": "Address",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Geolocation data retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.Address"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/order": {
            "get": {
                "description": "Get all orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get all orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Order"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Order"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order created",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/order/products": {
            "post": {
                "description": "Create a new order product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create a new order product",
                "parameters": [
                    {
                        "description": "Order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.OrderItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order created",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/order/products/{id}": {
            "delete": {
                "description": "Delete an order product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Delete an order product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/order/{id}": {
            "get": {
                "description": "Get an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order updated",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Delete an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/position": {
            "post": {
                "description": "Create a new position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Position"
                ],
                "summary": "Create a new position",
                "parameters": [
                    {
                        "description": "Position",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Position"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Position created",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/position/{id}": {
            "get": {
                "description": "Get a position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Position"
                ],
                "summary": "Get a position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Position"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Position"
                ],
                "summary": "Update a position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Position",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Position"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position updated",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Position"
                ],
                "summary": "Delete a position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position deleted",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/product": {
            "get": {
                "description": "Get all products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get all products",
                "responses": {
                    "200": {
                        "description": "Products retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Product"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product object",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product created",
                        "schema": {
                            "$ref": "#/definitions/database.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/product/cats": {
            "get": {
                "description": "Получить все категории товаров",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Получить все категории товаров",
                "responses": {
                    "200": {
                        "description": "Массив категорий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/product/{id}": {
            "get": {
                "description": "Get a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved",
                        "schema": {
                            "$ref": "#/definitions/database.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product object",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product updated",
                        "schema": {
                            "$ref": "#/definitions/database.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет продукт по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Удалить продукт по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID продукта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/reports/delivery": {
            "post": {
                "description": "Get delivery report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reporting"
                ],
                "summary": "Get delivery report",
                "parameters": [
                    {
                        "description": "DiagramReport object",
                        "name": "diagramReport",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.DiagramReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.DiagramReport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/reports/delivery/excel": {
            "post": {
                "description": "Get delivery report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reporting"
                ],
                "summary": "Get delivery report",
                "parameters": [
                    {
                        "description": "TableReport object",
                        "name": "diagramReport",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.TableReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.TableReport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/reports/sales": {
            "post": {
                "description": "Get sales report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reporting"
                ],
                "summary": "Get sales report",
                "parameters": [
                    {
                        "description": "DiagramReport object",
                        "name": "diagramReport",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.DiagramReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.DiagramReport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/reports/sales/excel": {
            "post": {
                "description": "Get sales report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reporting"
                ],
                "summary": "Get sales report",
                "parameters": [
                    {
                        "description": "TableReport object",
                        "name": "diagramReport",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.TableReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.TableReport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/role": {
            "post": {
                "description": "Create a new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Create a new role",
                "parameters": [
                    {
                        "description": "Role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Role"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Role created",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/role/{id}": {
            "get": {
                "description": "Get role by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Get role by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Update a role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role updated",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Delete a role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/supplier": {
            "get": {
                "description": "Get all suppliers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Get all suppliers",
                "responses": {
                    "200": {
                        "description": "Suppliers retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Supplier"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new supplier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Create a new supplier",
                "parameters": [
                    {
                        "description": "Supplier object",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Supplier"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Supplier created",
                        "schema": {
                            "$ref": "#/definitions/database.Supplier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/supplier/{id}": {
            "get": {
                "description": "Retrieve a supplier by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Retrieve a supplier by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier retrieved",
                        "schema": {
                            "$ref": "#/definitions/database.Supplier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a supplier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Update a supplier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Supplier object",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Supplier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier updated",
                        "schema": {
                            "$ref": "#/definitions/database.Supplier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a supplier by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Delete a supplier by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier deleted",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/warehouse": {
            "get": {
                "description": "Get all warehouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Get all warehouses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Warehouse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Create a new warehouse",
                "parameters": [
                    {
                        "description": "Warehouse object",
                        "name": "warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Warehouse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Warehouse ID",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/warehouse/{id}": {
            "get": {
                "description": "Get an existing warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Get an existing warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Warehouse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Delete an existing warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Update an existing warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Warehouse object",
                        "name": "warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Warehouse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Позволяет залогиниться пользователю в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Логин в системе",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.Auth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Создает нового пользователя в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Детали о пользователе",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.authRegResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Cargo": {
            "type": "object",
            "required": [
                "client_id",
                "description",
                "name",
                "order_id",
                "status",
                "weight"
            ],
            "properties": {
                "cargoProducts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.CargoProduct"
                    }
                },
                "client": {
                    "$ref": "#/definitions/database.User"
                },
                "client_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "$ref": "#/definitions/database.Order"
                },
                "order_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "database.CargoProduct": {
            "type": "object",
            "properties": {
                "cargoID": {
                    "type": "integer"
                },
                "productID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "database.DeliveryRoute": {
            "type": "object",
            "required": [
                "arrival_date",
                "cargo_id",
                "departure_date",
                "driver_id",
                "end_point",
                "start_point",
                "status"
            ],
            "properties": {
                "arrival_date": {
                    "type": "string"
                },
                "cargo": {
                    "$ref": "#/definitions/database.Cargo"
                },
                "cargo_id": {
                    "type": "integer"
                },
                "departure_date": {
                    "type": "string"
                },
                "driver": {
                    "$ref": "#/definitions/database.User"
                },
                "driver_id": {
                    "type": "integer"
                },
                "end_point": {
                    "$ref": "#/definitions/database.Point"
                },
                "id": {
                    "type": "integer"
                },
                "start_point": {
                    "$ref": "#/definitions/database.Point"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "database.DeliverySchedule": {
            "type": "object",
            "required": [
                "date",
                "products",
                "warehouse_id"
            ],
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.DeliveryScheduleProduct"
                    }
                },
                "warehouse": {
                    "$ref": "#/definitions/database.Warehouse"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "database.DeliveryScheduleProduct": {
            "type": "object",
            "required": [
                "product_id",
                "quantity"
            ],
            "properties": {
                "delivery_schedule": {
                    "$ref": "#/definitions/database.DeliverySchedule"
                },
                "delivery_schedule_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "product": {
                    "$ref": "#/definitions/database.Product"
                },
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "database.Order": {
            "type": "object",
            "required": [
                "address",
                "client_id",
                "order_date",
                "status"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "client": {
                    "$ref": "#/definitions/database.User"
                },
                "client_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "orderItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.OrderItem"
                    }
                },
                "order_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "database.OrderItem": {
            "type": "object",
            "required": [
                "order_id",
                "product_id",
                "quantity"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "order": {
                    "$ref": "#/definitions/database.Order"
                },
                "order_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_name": {
                    "$ref": "#/definitions/database.Product"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "database.Point": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                }
            }
        },
        "database.Position": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "database.Product": {
            "type": "object",
            "required": [
                "category",
                "description",
                "name",
                "price",
                "quantity",
                "supplier_id",
                "unit",
                "warehouse_id"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "supplier": {
                    "$ref": "#/definitions/database.Supplier"
                },
                "supplier_id": {
                    "type": "integer"
                },
                "unit": {
                    "type": "string"
                },
                "warehouse": {
                    "$ref": "#/definitions/database.Warehouse"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "database.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "database.Supplier": {
            "type": "object",
            "required": [
                "contact",
                "email",
                "name"
            ],
            "properties": {
                "contact": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Product"
                    }
                }
            }
        },
        "database.User": {
            "type": "object",
            "required": [
                "email",
                "firstname",
                "lastname",
                "password",
                "phone",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "position": {
                    "$ref": "#/definitions/database.Position"
                },
                "position_id": {
                    "type": "integer"
                },
                "role": {
                    "$ref": "#/definitions/database.Role"
                },
                "role_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "database.Warehouse": {
            "type": "object",
            "required": [
                "address",
                "position"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "$ref": "#/definitions/database.Point"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Product"
                    }
                }
            }
        },
        "handler.Address": {
            "type": "object",
            "properties": {
                "area": {
                    "description": "Район в регионе",
                    "type": "string"
                },
                "area_fias_id": {
                    "description": "Код ФИАС района в регионе",
                    "type": "string"
                },
                "area_kladr_id": {
                    "description": "Код КЛАДР района в регионе",
                    "type": "string"
                },
                "area_type": {
                    "description": "Тип района в регионе (сокращенный)",
                    "type": "string"
                },
                "area_type_full": {
                    "description": "Тип района в регионе",
                    "type": "string"
                },
                "area_with_type": {
                    "description": "Район в регионе с типом",
                    "type": "string"
                },
                "beltway_distance": {
                    "description": "Расстояние от кольцевой в км.",
                    "type": "string"
                },
                "beltway_hit": {
                    "description": "Внутри кольцевой?",
                    "type": "string"
                },
                "block": {
                    "description": "Корпус/строение",
                    "type": "string"
                },
                "block_type": {
                    "description": "Тип корпуса/строения (сокращенный)",
                    "type": "string"
                },
                "block_type_full": {
                    "description": "Тип корпуса/строения",
                    "type": "string"
                },
                "capital_marker": {
                    "description": "Статус центра",
                    "type": "string"
                },
                "city": {
                    "description": "Город",
                    "type": "string"
                },
                "city_area": {
                    "description": "Административный округ (только для Москвы)",
                    "type": "string"
                },
                "city_district": {
                    "description": "Район города",
                    "type": "string"
                },
                "city_district_fias_id": {
                    "description": "Код ФИАС района города (заполняется, только если район есть в ФИАС)",
                    "type": "string"
                },
                "city_district_kladr_id": {
                    "description": "Код КЛАДР района города (не заполняется)",
                    "type": "string"
                },
                "city_district_type": {
                    "description": "Тип района города (сокращенный)",
                    "type": "string"
                },
                "city_district_type_full": {
                    "description": "Тип района города",
                    "type": "string"
                },
                "city_district_with_type": {
                    "description": "Район города с типом",
                    "type": "string"
                },
                "city_fias_id": {
                    "description": "Код ФИАС города",
                    "type": "string"
                },
                "city_kladr_id": {
                    "description": "Код КЛАДР города",
                    "type": "string"
                },
                "city_type": {
                    "description": "Тип города (сокращенный)",
                    "type": "string"
                },
                "city_type_full": {
                    "description": "Тип города",
                    "type": "string"
                },
                "city_with_type": {
                    "description": "Город с типом",
                    "type": "string"
                },
                "country": {
                    "description": "Страна",
                    "type": "string"
                },
                "country_iso_code": {
                    "description": "ISO-код страны",
                    "type": "string"
                },
                "entrance": {
                    "description": "Подъезд",
                    "type": "string"
                },
                "federal_district": {
                    "description": "Федеральный округ",
                    "type": "string"
                },
                "fias_actuality_state": {
                    "description": "Признак актуальности адреса в ФИАС",
                    "type": "string"
                },
                "fias_code": {
                    "description": "Иерархический код адреса в ФИАС (СС+РРР+ГГГ+ППП+СССС+УУУУ+ДДДД)",
                    "type": "string"
                },
                "fias_id": {
                    "description": "Код ФИАС",
                    "type": "string"
                },
                "fias_level": {
                    "description": "Уровень детализации, до которого адрес найден в ФИАС",
                    "type": "string"
                },
                "flat": {
                    "description": "Квартира",
                    "type": "string"
                },
                "flat_area": {
                    "description": "Площадь квартиры",
                    "type": "string"
                },
                "flat_cadnum": {
                    "description": "Кадастровый номер квартиры (22.4+). Заполняется в зависимости от тарифа «Дадаты».",
                    "type": "string"
                },
                "flat_fias_id": {
                    "description": "ФИАС-код квартиры",
                    "type": "string"
                },
                "flat_price": {
                    "description": "Рыночная стоимость квартиры",
                    "type": "string"
                },
                "flat_type": {
                    "description": "Тип квартиры (сокращенный)",
                    "type": "string"
                },
                "flat_type_full": {
                    "description": "Тип квартиры",
                    "type": "string"
                },
                "floor": {
                    "description": "Этаж",
                    "type": "string"
                },
                "geo_lat": {
                    "description": "Координаты: широта",
                    "type": "string"
                },
                "geo_lon": {
                    "description": "Координаты: долгота",
                    "type": "string"
                },
                "house": {
                    "description": "Дом",
                    "type": "string"
                },
                "house_cadnum": {
                    "description": "Кадастровый номер дома (22.4+). Заполняется в зависимости от тарифа «Дадаты».",
                    "type": "string"
                },
                "house_fias_id": {
                    "description": "Код ФИАС дома",
                    "type": "string"
                },
                "house_kladr_id": {
                    "description": "Код КЛАДР дома",
                    "type": "string"
                },
                "house_type": {
                    "description": "Тип дома (сокращенный)",
                    "type": "string"
                },
                "house_type_full": {
                    "description": "Тип дома",
                    "type": "string"
                },
                "kladr_id": {
                    "description": "Код КЛАДР",
                    "type": "string"
                },
                "metro": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.Metro"
                    }
                },
                "okato": {
                    "description": "Код ОКАТО",
                    "type": "string"
                },
                "oktmo": {
                    "description": "Код ОКТМО",
                    "type": "string"
                },
                "postal_box": {
                    "description": "Абонентский ящик",
                    "type": "string"
                },
                "postal_code": {
                    "description": "Индекс",
                    "type": "string"
                },
                "qc": {
                    "description": "Код качества"
                },
                "qc_complete": {
                    "description": "Код полноты"
                },
                "qc_geo": {
                    "description": "QualityCodeGeoRaw для clean вызовов он int для suggest в адресе банков он string поэтому в поле поставил interface{} чтобы работало и там и там)\\"
                },
                "qc_house": {
                    "description": "Код проверки дома"
                },
                "region": {
                    "description": "Регион",
                    "type": "string"
                },
                "region_fias_id": {
                    "description": "Код ФИАС региона",
                    "type": "string"
                },
                "region_iso_code": {
                    "description": "ISO-код региона",
                    "type": "string"
                },
                "region_kladr_id": {
                    "description": "Код КЛАДР региона",
                    "type": "string"
                },
                "region_type": {
                    "description": "Тип региона (сокращенный)",
                    "type": "string"
                },
                "region_type_full": {
                    "description": "Тип региона",
                    "type": "string"
                },
                "region_with_type": {
                    "description": "Регион с типом",
                    "type": "string"
                },
                "result": {
                    "description": "Стандартизованный адрес одной строкой",
                    "type": "string"
                },
                "settlement": {
                    "description": "Населенный пункт",
                    "type": "string"
                },
                "settlement_fias_id": {
                    "description": "Код ФИАС нас. пункта",
                    "type": "string"
                },
                "settlement_kladr_id": {
                    "description": "Код КЛАДР нас. пункта",
                    "type": "string"
                },
                "settlement_type": {
                    "description": "Тип населенного пункта (сокращенный)",
                    "type": "string"
                },
                "settlement_type_full": {
                    "description": "Тип населенного пункта",
                    "type": "string"
                },
                "settlement_with_type": {
                    "description": "Населенный пункт с типом",
                    "type": "string"
                },
                "source": {
                    "description": "Исходный адрес одной строкой",
                    "type": "string"
                },
                "square_meter_price": {
                    "description": "Рыночная стоимость м²",
                    "type": "string"
                },
                "street": {
                    "description": "Улица",
                    "type": "string"
                },
                "street_fias_id": {
                    "description": "Код ФИАС улицы",
                    "type": "string"
                },
                "street_kladr_id": {
                    "description": "Код КЛАДР улицы",
                    "type": "string"
                },
                "street_type": {
                    "description": "Тип улицы (сокращенный)",
                    "type": "string"
                },
                "street_type_full": {
                    "description": "Тип улицы",
                    "type": "string"
                },
                "street_with_type": {
                    "description": "Улица с типом",
                    "type": "string"
                },
                "tax_office": {
                    "description": "Код ИФНС для физических лиц",
                    "type": "string"
                },
                "tax_office_legal": {
                    "description": "Код ИФНС для организаций",
                    "type": "string"
                },
                "timezone": {
                    "description": "Часовой пояс",
                    "type": "string"
                },
                "unparsed_parts": {
                    "description": "Нераспознанная часть адреса. Для адреса",
                    "type": "string"
                }
            }
        },
        "handler.Auth": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.Metro": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "line": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handler.authRegResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.successResponseAllCargos": {
            "type": "object",
            "properties": {
                "cargos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Cargo"
                    }
                },
                "page_count": {
                    "type": "integer"
                }
            }
        },
        "service.DiagramData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service.DiagramReport": {
            "type": "object",
            "required": [
                "date_end",
                "date_start"
            ],
            "properties": {
                "date_end": {
                    "type": "string"
                },
                "date_start": {
                    "type": "string"
                },
                "diagram_data": {
                    "$ref": "#/definitions/service.DiagramData"
                }
            }
        },
        "service.TableData": {
            "type": "object",
            "properties": {
                "rows": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "service.TableReport": {
            "type": "object",
            "required": [
                "date_end",
                "date_start"
            ],
            "properties": {
                "date_end": {
                    "type": "string"
                },
                "date_start": {
                    "type": "string"
                },
                "report_name": {
                    "type": "string"
                },
                "table_data": {
                    "$ref": "#/definitions/service.TableData"
                }
            }
        }
    }
}